name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push
        run: |
          echo "DOCKER_USERNAME=$DOCKER_USERNAME" > .env
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD" >> .env
          
          docker compose -f docker-compose.prod.yml build
          docker compose -f docker-compose.prod.yml push

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /app/todo-pipeline-demo
            
            cat > .env << EOL
            DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            EOL
            
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml down --remove-orphans
            docker compose -f docker-compose.prod.yml up -d